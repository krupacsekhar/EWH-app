{"version":3,"sources":["TextInputOutlined.tsx"],"names":["TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","getConstants","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","minHeight","outlinedHeight","LABEL_PADDING_TOP_DENSE","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: `${testID}-outlined`,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}