{"version":3,"sources":["FABGroup.tsx"],"names":["React","StyleSheet","Animated","SafeAreaView","TouchableWithoutFeedback","View","FAB","Text","Card","withTheme","getFABGroupColors","FABGroup","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","color","colorProp","variant","backdropColor","customBackdropColor","current","backdrop","useRef","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","length","_","i","styles","container","backgroundColor","safeArea","it","labelTextStyle","labelTextColor","fonts","titleMedium","marginHorizontal","size","label","item","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","elevation","labelStyle","expanded","fab","displayName","FABGroupWithTheme","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\nimport type { Theme } from '../../types';\nimport { getFABGroupColors } from './utils';\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: StyleProp<ViewStyle>;\n    containerStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    onPress: () => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n  variant = 'primary',\n  backdropColor: customBackdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      accessibilityHint={it.accessibilityHint}\n                      style={\n                        [\n                          styles.containerStyle,\n                          {\n                            transform: [\n                              isV3\n                                ? { translateY: labelTranslations[i] }\n                                : { scale: scales[i] },\n                            ],\n                            opacity: opacities[i],\n                          },\n                          isV3 && styles.v3ContainerStyle,\n                          it.containerStyle,\n                        ] as StyleProp<ViewStyle>\n                      }\n                      onPress={() => {\n                        it.onPress();\n                        close();\n                      }}\n                      accessibilityLabel={accessibilityLabel}\n                      accessibilityRole=\"button\"\n                      {...(isV3 && { elevation: 0 })}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        style={[labelTextStyle, it.labelStyle]}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: stackedFABBackgroundColor,\n                      },\n                      isV3 && { transform: [{ translateY: translations[i] }] },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    close();\n                  }}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n          variant={variant}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"]}